[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"



[tool.poetry.dependencies]
python = ">=3.9,<3.13"
ipykernel = "^6.29.5"
clearml = "^1.16.5"
poethepoet = {extras = ["poetry-plugin"], version = "^0.31.1"}
loguru = "^0.7.3"
bs4 = "^0.0.2"
pymongo = "^4.10.1"
click = ">=8.0.1,<8.1.4"
rich = "^13.9.4"
numpy = ">=1.22.4,<2"
datasets = ">3.1.0,<4.0.0"

# Digital data ETL
selenium = "^4.27.1"
webdriver-manager = "^4.0.2"
beautifulsoup4 = "^4.12.3"
html2text = "^2024.2.26"
jmespath = "^1.0.1"
chromedriver-autoinstaller = "^0.6.4"

# Feature engineering
qdrant-client = "^1.12.1"
langchain = "^0.3.10"
sentence-transformers = "^3.3.1"

# RAG
langchain-openai = "^0.2.11"
jinja2 = "^3.1.4"
tiktoken = "^0.8.0"
fake-useragent = "^2.0.1"
langchain-community = "^0.3.10"
transformers = "^4.47.0"

# Inference
fastapi = "^0.115.6"
uvicorn = "^0.32.1"
opik = "^1.2.3"
nbconvert = "^7.16.4"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"




[tool.poe.tasks]
# Data pipelines
run-digital-data-etl-alex = "echo 'It is not supported anymore.'"
run-digital-data-etl-maxime = "poetry run python -m tools.run --run-etl --no-cache --etl-config-filename digital_data_etl_maxime_labonne.yaml"
run-digital-data-etl-paul = "poetry run python -m tools.run --run-etl --no-cache --etl-config-filename digital_data_etl_paul_iusztin.yaml"
run-digital-data-etl = [
    "run-digital-data-etl-maxime",
    "run-digital-data-etl-paul",
]
run-feature-engineering-pipeline = "poetry run python -m tools.run --no-cache --run-feature-engineering"
run-generate-instruct-datasets-pipeline = "poetry run python -m tools.run --no-cache --run-generate-instruct-datasets"
run-generate-preference-datasets-pipeline = "poetry run python -m tools.run --no-cache --run-generate-preference-datasets"
run-end-to-end-data-pipeline = "poetry run python -m tools.run --no-cache --run-end-to-end-data"

# Utility pipelines
run-export-artifact-to-json-pipeline = "poetry run python -m tools.run --no-cache --run-export-artifact-to-json"
run-export-data-warehouse-to-json = "poetry run python -m tools.data_warehouse --export-raw-data"
run-import-data-warehouse-from-json = "poetry run python -m tools.data_warehouse --import-raw-data"

# Training pipelines
run-training-pipeline = "poetry run python -m tools.run --no-cache --run-training"
run-evaluation-pipeline = "poetry run python -m tools.run --no-cache --run-evaluation"

# Inference
call-rag-retrieval-module = "poetry run python -m tools.rag"

run-inference-ml-service = "poetry run uvicorn tools.ml_service:app --host 0.0.0.0 --port 8000 --reload"
call-inference-ml-service = "curl -X POST 'http://127.0.0.1:8000/rag' -H 'Content-Type: application/json' -d '{\"query\": \"My name is Paul Iusztin. Could you draft a LinkedIn post discussing RAG systems? I am particularly interested in how RAG works and how it is integrated with vector DBs and LLMs.\"}'"




[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
